<% include layout.ejs %>

<div id="content"><%- markup %></div>

<script src="/components/socket.io-client/socket.io.js"></script>
<script src="/components/lodash/lodash.min.js"></script>
<script src="js/app.js"></script>
<script>
//    'use strict';

//    var verbs = [
//        'GET',
//        'POST',
//        'PUT',
//        'PATCH',
//        'DELETE'
//    ];

//    var counter = {
//        getCounter: 0,
//        postCounter: 0,
//        putCounter: 0,
//        patchCounter: 0,
//        deleteCounter: 0,
//        totalCounter: function() {
//            return this.getCounter + this.postCounter + this.putCounter + this.patchCounter + this.deleteCounter;
//        }
//    };
//    var previousCount;

//    var updateVerbs = function(data) {
//        if(_.includes(verbs, data.request)) {
//            var verb = data.request.toLowerCase();
//            document.getElementById(verb + "Counter").innerHTML = ++counter[verb + "Counter"];
//            document.getElementById(verb + "Time").innerHTML = data.created;
//            document.getElementById("totalCounter").innerHTML = counter.totalCounter();
//        }
//    }

//    var socket = io.connect("http://localhost:3000");
//    socket.on("http", function(data) {
//
//        updateVerbs(data);
//
//        _.forEach(["request", "from", "to", "headers", "content"], function(n) {
//            document.getElementById(n).innerHTML = data[n];
//        });
//    });

//    setInterval(function() {
//        if(previousCount !== counter.totalCounter()) {
//            var totalCounter = counter.totalCounter();
//            var totalRequests = {
//                requests: totalCounter,
//                timestamp: new Date()
//            };
//            previousCount = totalCounter;
//            socket.emit("totalRequests", JSON.stringify(totalRequests));
//        }
//    }, 5000);

</script>

</body>
</html>
